<?xml version="1.0" encoding="UTF-8"?>
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
   xmlns:ui="http://java.sun.com/jsf/facelets"
   xmlns:f="http://java.sun.com/jsf/core"
   xmlns:h="http://java.sun.com/jsf/html"
   xmlns:pt="http://xmlns.jcp.org/jsf/passthrough"
   template="/WEB-INF/templates/default.xhtml">
   <ui:define name="content">
      <h:form id="formCliente">
         <h2>CLIENTE</h2>
         
         <p>
         	<h:commandButton id="voltar" value="Voltar" action="fornecedorCadastro?faces-redirect=true" />
         
         </p>
         <!-- Neste ponto, devemos recuperar a lista de clientes disponível no ManagedBean e devemos criar uma variável
         que irá representar um elemento na lista de elementos retornada -->
         <h:dataTable var="f" value="#{fornecedorBean.listaFornecedores}" border="1">
	         <h:column>
	            <f:facet name="header">Id</f:facet>
	            <!-- Neste ponto deverá ser exibido o valor que se deseja nesta coluna usando JSF. O mesmo deve ser feito
	            para as outras colunas -->
	            <h:outputText value="#{f.id}"></h:outputText>
	         </h:column>
	         <h:column>
	            <f:facet name="header">Razão Social</f:facet>
	            <h:outputText value="#{f.razaoSocial}"></h:outputText>
	         </h:column>
	         <h:column>
	            <f:facet name="header">CNPJ</f:facet>
	            <h:outputText value="#{f.cnpj}"></h:outputText>
	         </h:column>
	         <h:column>
	            <f:facet name="header">Endereço</f:facet>
	            <h:outputText value="#{f.endereco}"></h:outputText>
	         </h:column>
	         <h:column>
	            <f:facet name="header">Email do Fornecedor</f:facet>
	            <h:outputText value="#{f.email}"></h:outputText>
	         </h:column>
	         
	      </h:dataTable>
	      <p>
            <!-- Neste ponto, deve-se incluir o botão de voltar conforme o desafio 2 apresentado no laboratório. -->
         </p>
      </h:form>
   </ui:define>
</ui:composition>
